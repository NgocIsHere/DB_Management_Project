----=============================================================================
----XEM ROLE ĐÃ TẠO
--SELECT * FROM DBA_ROLES WHERE ROLE LIKE 'C##P_%';
----XEM QUYỀN TRÊN TABLE CỦA ROLE
--SELECT * FROM ROLE_TAB_PRIVS WHERE ROLE LIKE 'C##P%';
----XEM DANH SÁCH MEMBER CỦA ROLE
--SELECT * FROM DBA_ROLE_PRIVS WHERE GRANTED_ROLE LIKE 'C##P_%' AND GRANTEE = 'PROJECT_U_9'; 
--
--select table_name from all_tables where table_name like 'PROJECT_%';
--SELECT *
--FROM ALL_VIEWS
--WHERE VIEW_NAME LIKE 'PROJECT_%'
--
--SELECT * FROM USER_SYS_PRIVS; 
--SELECT * FROM USER_TAB_PRIVS WHERE GRANTEE LIKE 'PROJECT_U_%';
--SELECT * FROM USER_ROLE_PRIVS;
--
--
--select * from all_tables where table_name like 'PROJECT_%'
--
--SELECT * FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'PROJECT_S_TEST_DANGKY'
--select*from project_phancong where magv = '11'
--=============================================================
--CS1
CREATE OR REPLACE VIEW PROJECT_NVCOBAN_XEMTHONGTINCANHAN
AS SELECT *
FROM PROJECT_NHANSU
WHERE USERNAME = SYS_CONTEXT('USERENV', 'SESSION_USER');

CREATE OR REPLACE VIEW PROJECT_NVCOBAN_UPDATESDT
AS SELECT DT
FROM PROJECT_NHANSU
WHERE USERNAME = SYS_CONTEXT('USERENV', 'SESSION_USER');

CREATE OR REPLACE PROCEDURE PROJECT_CAIDAT_CS1 AS
    STRSQL VARCHAR2(2000);
BEGIN
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE';
    EXECUTE IMMEDIATE STRSQL;
    STRSQL := 'GRANT SELECT ON PROJECT_NVCOBAN_XEMTHONGTINCANHAN TO C##P_NVCOBAN';
    EXECUTE IMMEDIATE STRSQL;
    STRSQL := 'GRANT UPDATE ON PROJECT_NVCOBAN_UPDATESDT TO C##P_NVCOBAN';
    EXECUTE IMMEDIATE STRSQL;
    
    STRSQL := 'GRANT SELECT ON PROJECT_SINHVIEN TO C##P_NVCOBAN';
    EXECUTE IMMEDIATE STRSQL;
    STRSQL := 'GRANT SELECT ON PROJECT_DONVI TO C##P_NVCOBAN';
    EXECUTE IMMEDIATE STRSQL;
    STRSQL := 'GRANT SELECT ON PROJECT_HOCPHAN TO C##P_NVCOBAN';
    EXECUTE IMMEDIATE STRSQL;
    STRSQL := 'GRANT SELECT ON PROJECT_KHMO TO C##P_NVCOBAN';
    EXECUTE IMMEDIATE STRSQL;
    
    --STRSQL := 'GRANT CONNECT, CREATE SESSION TO C##P_NVCOBAN';
    --EXECUTE IMMEDIATE STRSQL;   
END;
/
EXEC PROJECT_CAIDAT_CS1;
/
--CS2
CREATE OR REPLACE VIEW PROJECT_GIANGVIEN_XEMPHANCONGCANHAN
AS SELECT PC.MAGV, PC.MAHP, PC.HK, PC.NAM, PC.MACT
FROM PROJECT_NHANSU NS JOIN PROJECT_PHANCONG PC ON NS.MANV = PC.MAGV
WHERE USERNAME = SYS_CONTEXT('USERENV', 'SESSION_USER');

CREATE OR REPLACE VIEW PROJECT_GIANGVIEN_XEMDANGKYDCPC
AS SELECT DK.*
FROM PROJECT_NHANSU NS JOIN PROJECT_DANGKY DK ON DK.MAGV = NS.MANV
WHERE USERNAME = SYS_CONTEXT('USERENV', 'SESSION_USER'); 

--CREATE OR REPLACE VIEW PROJECT_GIANGVIEN_CAPNHATDIEM_DANGKY
--AS SELECT DK.MASV,DK.DIEMTHI, DK.DIEMQT, DK.DIEMCK, DK.DIEMTK
--FROM PROJECT_NHANSU NS JOIN PROJECT_DANGKY DK ON DK.MAGV = NS.MANV
--WHERE USERNAME = SYS_CONTEXT('USERENV', 'SESSION_USER'); 

CREATE OR REPLACE PROCEDURE PROJECT_CAIDAT_CS2 AS
    STRSQL VARCHAR2(2000);
BEGIN
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE';
    EXECUTE IMMEDIATE STRSQL;
    STRSQL := 'GRANT C##P_NVCOBAN TO C##P_GIANGVIEN WITH ADMIN OPTION';
    EXECUTE IMMEDIATE STRSQL;
    STRSQL := 'GRANT SELECT ON PROJECT_GIANGVIEN_XEMPHANCONGCANHAN TO C##P_GIANGVIEN';
    EXECUTE IMMEDIATE STRSQL;
    STRSQL := 'GRANT SELECT ON PROJECT_GIANGVIEN_XEMDANGKYDCPC TO C##P_GIANGVIEN';
    EXECUTE IMMEDIATE STRSQL;
    STRSQL := 'GRANT SELECT, UPDATE(DIEMTH, DIEMQT, DIEMCK, DIEMTK) ON PROJECT_GIANGVIEN_XEMDANGKYDCPC TO C##P_GIANGVIEN';
    EXECUTE IMMEDIATE STRSQL;

    --STRSQL := 'GRANT CONNECT TO C##P_GIANGVIEN';
    --EXECUTE IMMEDIATE STRSQL;
    
END;
/
EXEC PROJECT_CAIDAT_CS2;
/
--CS3

CREATE OR REPLACE VIEW GIAOVU_PHANCONG AS
SELECT * FROM PROJECT_PHANCONG
WHERE MAHP IN (SELECT MAHP FROM PROJECT_HOCPHAN WHERE MADV = (SELECT MADV FROM PROJECT_DONVI WHERE TENDV = 'Văn phòng khoa'));

CREATE OR REPLACE VIEW GIAOVU_DANGKY AS
SELECT * FROM PROJECT_DANGKY
WHERE TRUNC(SYSDATE) BETWEEN (SELECT TRUNC(ADD_MONTHS(TO_DATE('01-01-' || NAM, 'DD-MM-YYYY'), (HK - 1) * 4)) FROM PROJECT_KHMO WHERE MAHP = PROJECT_DANGKY.MAHP AND HK = PROJECT_DANGKY.HK AND NAM = PROJECT_DANGKY.NAM)
AND (SELECT TRUNC(ADD_MONTHS(TO_DATE('01-01-' || NAM, 'DD-MM-YYYY'), (HK - 1) * 4) + 14) FROM PROJECT_KHMO WHERE MAHP = PROJECT_DANGKY.MAHP AND HK = PROJECT_DANGKY.HK AND NAM = PROJECT_DANGKY.NAM);

CREATE OR REPLACE PROCEDURE GRANT_ROLE_GIAOVU AS
BEGIN
    -- Grant C##P_NVCOBAN role to C##P_GIAOVU
    EXECUTE IMMEDIATE 'GRANT C##P_NVCOBAN TO C##P_GIAOVU';

    -- Grant select, insert, update on SINHVIEN, DONVI, HOCPHAN, KHMO to C##P_GIAOVU
    EXECUTE IMMEDIATE 'GRANT SELECT, INSERT, UPDATE ON PROJECT_SINHVIEN TO C##P_GIAOVU';
    EXECUTE IMMEDIATE 'GRANT SELECT, INSERT, UPDATE ON PROJECT_DONVI TO C##P_GIAOVU';
    EXECUTE IMMEDIATE 'GRANT SELECT, INSERT, UPDATE ON PROJECT_HOCPHAN TO C##P_GIAOVU';
    EXECUTE IMMEDIATE 'GRANT SELECT, INSERT, UPDATE ON PROJECT_KHMO TO C##P_GIAOVU';

    -- Grant select on PHANCONG to C##P_GIAOVU
    EXECUTE IMMEDIATE 'GRANT SELECT ON PROJECT_PHANCONG TO C##P_GIAOVU';
    EXECUTE IMMEDIATE 'GRANT SELECT,UPDATE ON GIAOVU_PHANCONG TO C##P_GIAOVU';

    -- Grant delete, insert on DANGKY to C##P_GIAOVU
    EXECUTE IMMEDIATE 'GRANT DELETE, INSERT ON PROJECT_DANGKY TO C##P_GIAOVU';
END;
/
EXEC GRANT_ROLE_GIAOVU
/
--CS4
CREATE OR REPLACE VIEW PROJECT_V1_TRUONGDONVI_PHANCONG
AS 
    SELECT* FROM PROJECT_PHANCONG PC
    WHERE EXISTS (SELECT HP.MAHP 
    FROM PROJECT_HOCPHAN HP JOIN PROJECT_DONVI DV ON HP.MADV = DV.MADV
    JOIN PROJECT_NHANSU NS2 ON DV.TRGDV = NS2.MANV
    WHERE HP.MAHP = PC.MAHP AND NS2.USERNAME = SYS_CONTEXT('USERENV','SESSION_USER'));
/
CREATE OR REPLACE VIEW PROJECT_V2_TRUONGDONVI_PHANCONG
AS
    SELECT* FROM PROJECT_PHANCONG PC
    WHERE EXISTS(SELECT NS.MANV FROM PROJECT_NHANSU NS
    JOIN PROJECT_DONVI DV ON NS.MADV = DV.MADV 
    JOIN PROJECT_NHANSU NS2 ON DV.TRGDV = NS2.MANV
    WHERE NS.MANV = PC.MAGV AND NS2.USERNAME = SYS_CONTEXT('USERENV','SESSION_USER'));
/
CREATE OR REPLACE TRIGGER PHANCONG_BEFORE_DELETE
BEFORE DELETE
   ON PROJECT_PHANCONG 
   FOR EACH ROW
   
BEGIN
    DELETE FROM PROJECT_DANGKY
    WHERE MAGV = :OLD.MAGV AND MAHP = :OLD.MAHP AND HK = :OLD.HK AND NAM = :OLD.NAM AND MACT = :OLD.MACT;

END;
/
CREATE OR REPLACE PROCEDURE PROJECT_CS#4
AS
    BEGIN
        EXECUTE IMMEDIATE 'GRANT C##P_GIANGVIEN TO C##P_TRUONGDONVI';
        EXECUTE IMMEDIATE 'GRANT SELECT, INSERT, DELETE, UPDATE ON PROJECT_V1_TRUONGDONVI_PHANCONG TO C##P_TRUONGDONVI';
        EXECUTE IMMEDIATE 'GRANT SELECT ON PROJECT_V2_TRUONGDONVI_PHANCONG TO C##P_TRUONGDONVI';
    END;
/
EXEC PROJECT_CS#4;
/
--CS5
CREATE OR REPLACE VIEW PROJECT_V1_TRUONGKHOA_PHANCONG
AS
    SELECT* FROM PROJECT_PHANCONG PC
    WHERE EXISTS (SELECT HP.MAHP 
    FROM PROJECT_HOCPHAN HP JOIN PROJECT_DONVI DV ON HP.MADV = DV.MADV
    WHERE HP.MAHP = PC.MAHP AND DV.TENDV = N'Văn phòng khoa');
CREATE OR REPLACE PROCEDURE PROJECT_CS#5
AS
    BEGIN
        EXECUTE IMMEDIATE 'GRANT C##P_GIANGVIEN TO C##P_TRUONGKHOA';
        EXECUTE IMMEDIATE 'GRANT SELECT, INSERT, UPDATE ON PROJECT_V1_TRUONGKHOA_PHANCONG TO C##P_TRUONGKHOA';
        EXECUTE IMMEDIATE 'GRANT SELECT,INSERT,DELETE,UPDATE ON PROJECT_NHANSU TO C##P_TRUONGKHOA';
        EXECUTE IMMEDIATE 'GRANT SELECT ON PROJECT_DANGKY TO C##P_TRUONGKHOA';
        EXECUTE IMMEDIATE 'GRANT SELECT ON PROJECT_DONVI TO C##P_TRUONGKHOA';
        EXECUTE IMMEDIATE 'GRANT SELECT ON PROJECT_HOCPHAN TO C##P_TRUONGKHOA';
        EXECUTE IMMEDIATE 'GRANT SELECT ON PROJECT_KHMO TO C##P_TRUONGKHOA';
        EXECUTE IMMEDIATE 'GRANT SELECT ON PROJECT_PHANCONG TO C##P_TRUONGKHOA';
        EXECUTE IMMEDIATE 'GRANT SELECT ON PROJECT_SINHVIEN TO C##P_TRUONGKHOA';
    END;
/
EXEC PROJECT_CS#5
--CS6
ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE
BEGIN
    DBMS_RLS.DROP_POLICY(
        OBJECT_SCHEMA =>'C##ADMIN',
        OBJECT_NAME=>'project_DANGKY',
        POLICY_NAME =>'SV_DANGKY_SELECT'
    );
END;
/
-- CS6:
-- Trên quan hệ SINHVIEN, sinh viên chỉ được xem thông tin của chính mình, được
-- Chỉnh sửa thông tin địa chỉ (ĐCHI) và số điện thoại liên lạc (ĐT) của chính sinh viên.
CREATE OR REPLACE FUNCTION SV_SELECT_FUNCTION (
    P_SCHEMA VARCHAR2,
    P_OBJ VARCHAR2
)
RETURN VARCHAR2
AS
    L_USER VARCHAR2(100); -- Changed USER to L_USER to avoid conflicts
    MASV VARCHAR2(100); -- Corrected the declaration
BEGIN
    L_USER := SYS_CONTEXT('USERENV','SESSION_USER'); -- Corrected the typo in USERENV
    MASV := REPLACE(L_USER, 'SV', ''); -- Corrected the typo in variable name
    RETURN 'MASV = ''' || MASV || '''';
END;
/
BEGIN
    DBMS_RLS.ADD_POLICY(
        OBJECT_SCHEMA =>'C##ADMIN',
        OBJECT_NAME=>'project_sinhvien',
        POLICY_NAME =>'SV_SELECT_SINHVIEN',
        POLICY_FUNCTION=>'SV_SELECT_FUNCTION',
        STATEMENT_TYPES=>'SELECT, UPDATE',
        UPDATE_CHECK => TRUE
);
END;
/
grant SELECT ON PROJECT_SINHVIEN TO C##P_SINHVIEN;
grant UPDATE (DCHI,DT) ON PROJECT_SINHVIEN TO C##P_SINHVIEN;
-- Xem danh sách tất cả học phần (HOCPHAN), kế hoạch mở môn (KHMO) của chương
-- trình đào tạo mà sinh viên đang theo học.
CREATE OR REPLACE FUNCTION SV_SELECT_KHMO_FUNCTION
  (P_SCHEMA VARCHAR2, P_OBJ VARCHAR2)
RETURN VARCHAR2
AS
  MA VARCHAR(5);
  STRSQL VARCHAR2(2000);
  CURSOR CUR IS (
    SELECT MACT
    FROM PROJECT_SINHVIEN
    WHERE MASV = REPLACE(SYS_CONTEXT('USERENV','SESSION_USER'), 'SV', ''));
BEGIN
  STRSQL := ''; 
  OPEN CUR;
  LOOP
    FETCH CUR INTO MA;
    EXIT WHEN CUR%NOTFOUND;
    IF (STRSQL IS NOT NULL) THEN
      STRSQL := STRSQL || ',''' || MA || ''''; -- Corrected concatenation operator
    ELSE
      STRSQL := '''' || MA || ''''; -- Corrected concatenation operator
    END IF;
  END LOOP;
  RETURN 'MACT IN (' || STRSQL || ')';
END;
/
BEGIN
  DBMS_RLS.ADD_POLICY(
    OBJECT_SCHEMA =>'C##ADMIN',
    OBJECT_NAME=>'PROJECT_KHMO', -- Corrected table name to uppercase
    POLICY_NAME =>'SV_SELECT_KHMO',
    POLICY_FUNCTION=>'SV_SELECT_KHMO_FUNCTION',
    STATEMENT_TYPES=>'SELECT',
    UPDATE_CHECK => TRUE
  );
END;
/

CREATE OR REPLACE FUNCTION SV_SELECT_HOCPHAN_FUNCTION
 (P_SCHEMA VARCHAR2, P_OBJ VARCHAR2)
RETURN VARCHAR2
AS
 MA VARCHAR2(5);
 STRSQL VARCHAR2(2000);
 CURSOR CUR IS (SELECT MAHP
 FROM PROJECT_KHMO);
BEGIN
 OPEN CUR;
 LOOP
 FETCH CUR INTO MA;
 EXIT WHEN CUR%NOTFOUND;
 IF (STRSQL IS NOT NULL) THEN
 STRSQL := STRSQL ||''',''';
 END IF;
 STRSQL := STRSQL || MA;
 END LOOP;
 RETURN 'MAHP IN ('''||STRSQL||''')';
END; 
/
BEGIN
  DBMS_RLS.ADD_POLICY(
    OBJECT_SCHEMA =>'C##ADMIN',
    OBJECT_NAME=>'project_HOCPHAN',
    POLICY_NAME =>'SV_SELECT_HOCPHAN',
    POLICY_FUNCTION=>'SV_SELECT_HOCPHAN_FUNCTION',
    STATEMENT_TYPES=>'SELECT'
  );
END;
/
-- Thêm, Xóa các dòng dữ liệu đăng ký học phần (ĐANGKY) liên quan đến chính sinh
--viên đó trong học kỳ của năm học hiện tại (nếu thời điểm hiệu chỉnh đăng ký còn hợp
--lệ).
CREATE OR REPLACE FUNCTION SV_INSERT_DELETE_DANGKY_FUNCTION (
    P_SCHEMA VARCHAR2,
    P_OBJ VARCHAR2
)
RETURN VARCHAR2
AS
    v_limit_date DATE;
    v_masv VARCHAR2(50);
    v_hk int;
    v_year int;
    v_month VARCHAR2(50);
BEGIN
    -- Set the end of the valid registration period
    SELECT EXTRACT(YEAR FROM SYSDATE) into v_year FROM DUAL;
    SELECT MAX(HK) into v_hk FROM C##ADMIN.PROJECT_KHMO WHERE NAM = v_year ;
    IF v_hk = 1 THEN
        v_month := '09';
    ELSIF v_hk = 2 THEN
        v_month := '02';
    ELSIF v_hk = 3 THEN
        v_month := '07';
    END IF;
    v_limit_date := TO_DATE(v_year || '/' || v_month || '/19', 'yyyy/mm/dd');
    
    -- Get the student ID from the current session user
    v_masv := REPLACE(SYS_CONTEXT('USERENV', 'SESSION_USER'), 'SV', '');
    
    -- Check if the current date is within the valid registration period
    IF CURRENT_DATE <= v_limit_date THEN
        -- Allow operations for the current student in the current academic year and semester
        RETURN 'MASV = ''' || v_masv || '''';
    ELSE
        -- Disallow operations
        RETURN '1=0';
    END IF;
END;
/
BEGIN
    DBMS_RLS.ADD_POLICY(
        OBJECT_SCHEMA =>'C##ADMIN',
        OBJECT_NAME=>'PROJECT_DANGKY',
        POLICY_NAME =>'SV_DANGKY_INSERT',
        POLICY_FUNCTION=>'SV_INSERT_DELETE_DANGKY_FUNCTION',
        STATEMENT_TYPES=> 'INSERT'
    );
END;
/
BEGIN
    DBMS_RLS.ADD_POLICY(
        OBJECT_SCHEMA    => 'C##ADMIN',
        OBJECT_NAME      => 'PROJECT_DANGKY',
        POLICY_NAME      => 'SV_DANGKY_DELETE',
        FUNCTION_SCHEMA  => 'C##ADMIN', -- Schema where the function is located
        POLICY_FUNCTION  => 'SV_INSERT_DELETE_DANGKY_FUNCTION',
        STATEMENT_TYPES  => 'DELETE'
    );
END;
/
-- Sinh viên không được chỉnh sửa trên các trường liên quan đến điểm.
CREATE OR REPLACE FUNCTION SV_UPDATE_DIEM_FUNCTION (
    P_SCHEMA VARCHAR2,
    P_OBJ VARCHAR2
)
RETURN VARCHAR2
AS
BEGIN
    -- This policy will always be FALSE for UPDATE operations on grade-related fields
    RETURN '1=0'; -- Prevent all updates
END;
/
BEGIN
    DBMS_RLS.ADD_POLICY(
        OBJECT_SCHEMA    => 'C##ADMIN',
        OBJECT_NAME      => 'PROJECT_DANGKY',
        POLICY_NAME      => 'SV_UPDATE_DIEM',
        FUNCTION_SCHEMA  => 'C##ADMIN', -- Schema where the function is located
        POLICY_FUNCTION  => 'SV_UPDATE_DIEM_FUNCTION',
        STATEMENT_TYPES  => 'UPDATE',
        sec_relevant_cols    => 'DIEMTHI, DIEMQT, DIEMCK, DIEMTK' -- Columns to restrict
    );
END;
/
-- Sinh viên được Xem tất cả thông tin trên quan hệ ĐANGKY tại các dòng dữ liệu liên
-- quan đến chính sinh 
BEGIN
    DBMS_RLS.ADD_POLICY(
        OBJECT_SCHEMA =>'C##ADMIN',
        OBJECT_NAME=>'PROJECT_DANGKY',
        POLICY_NAME =>'SV_DANGKY_SELECT',
        POLICY_FUNCTION=>'SV_SELECT_FUNCTION',
        STATEMENT_TYPES=>'SELECT'
    );
END;
/
GRANT SELECT ON PROJECT_SINHVIEN TO C##P_SINHVIEN;
GRANT UPDATE (DCHI,DT) ON PROJECT_SINHVIEN TO C##P_SINHVIEN;
GRANT SELECT ON PROJECT_HOCPHAN TO C##P_SINHVIEN;
GRANT SELECT ON PROJECT_KHMO TO C##P_SINHVIEN;
GRANT SELECT ON PROJECT_PHANCONG TO C##P_SINHVIEN;
GRANT INSERT ON PROJECT_DANGKY TO C##P_SINHVIEN;
GRANT DELETE ON PROJECT_DANGKY TO C##P_SINHVIEN;
GRANT SELECT ON PROJECT_DANGKY TO C##P_SINHVIEN;
GRANT C##P_SINHVIEN TO SV1;

